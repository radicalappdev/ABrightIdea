#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["GridMaterial", "LightBulb", "Dome", "Floor", "FloorMat", "DomeMat"]
    def "GridMaterial" (
        active = true
        references = @Materials/GridMaterial.usda@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "LightBulb" (
        active = true
        references = @light-bulb-rad.usdc@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 1.1888162, -1.2053841)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.0558661, 0.1049836, 0.0558661)
                float height = 0.1049836
                float radius = 0.02793305
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 0.0717243, -4.0978193e-8)
                }
            }
        }
    }

    def Sphere "Dome" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/DomeMat> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 4.8
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Cube "Floor" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/FloorMat> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 1
        float3 xformOp:scale = (10, 0.1, 10)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Floor/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def "FloorMat" (
        active = true
        references = @SmoothConcrete.usdz@
    )
    {
        float2 inputs:UV_Scale = (10, 10)
    }

    def "DomeMat" (
        active = true
        references = @BlackABSPlastic.usdz@
    )
    {
        float2 inputs:UV_Scale = (10, 10)
    }
}

